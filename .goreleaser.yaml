version: 2

before:
  hooks:
    - go mod tidy

builds:
  - id: "asbackup"
    main: cmd/asbackup/main.go
    binary: "asbackup"
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w -X 'main.appVersion={{.Version}}' -X 'main.commitHash={{.Commit}}' -X 'main.buildTime={{.Date}}'
  - id: "asrestore"
    main: cmd/asrestore/main.go
    binary: "asrestore"
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w -X 'main.appVersion={{.Version}}' -X 'main.commitHash={{.Commit}}' -X 'main.buildTime={{.Date}}'

archives:
  - id: "asbackup"
    formats:  [ 'tar.gz' ]
    name_template: >-
      {{ .Binary }}-{{ .Version }}-
      {{- title .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]
    files:
      - LICENSE
    ids:
      - "asbackup"
  - id: "asrestore"
    formats:  [ 'tar.gz' ]
    name_template: >-
      {{ .Binary }}-{{ .Version }}-
      {{- title .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]
    files:
      - LICENSE
    ids:
      - "asrestore"

release:
  prerelease: true
  make_latest: false
  replace_existing_artifacts: true
  mode: prepend
  header: |
    ## Release {{ .Version }} ({{ .Date }})
    - asbackup (CLI tool)
    - asrestore (CLI tool)
    - backup-go (library)

changelog:
  disable: true

checksum:
  name_template: "{{ .ArtifactName }}.sha256"
  split: true
  algorithm: sha256

signs:
  - artifacts: checksum
    cmd: gpg
    args:
      - --batch
      - --armor
      - --yes
      - -u
      - "{{ .Env.GPG_FINGERPRINT }}"
      - --output
      - "${artifact}.asc"
      - --detach-sign
      - "${artifact}"
    signature: "${artifact}.asc"
    env:
      - GPG_FINGERPRINT
