// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Writer is an autogenerated mock type for the Writer type
type Writer struct {
	mock.Mock
}

type Writer_Expecter struct {
	mock *mock.Mock
}

func (_m *Writer) EXPECT() *Writer_Expecter {
	return &Writer_Expecter{mock: &_m.Mock}
}

// Cancel provides a mock function with given fields:
func (_m *Writer) Cancel() {
	_m.Called()
}

// Writer_Cancel_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Cancel'
type Writer_Cancel_Call struct {
	*mock.Call
}

// Cancel is a helper method to define mock.On call
func (_e *Writer_Expecter) Cancel() *Writer_Cancel_Call {
	return &Writer_Cancel_Call{Call: _e.mock.On("Cancel")}
}

func (_c *Writer_Cancel_Call) Run(run func()) *Writer_Cancel_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Writer_Cancel_Call) Return() *Writer_Cancel_Call {
	_c.Call.Return()
	return _c
}

func (_c *Writer_Cancel_Call) RunAndReturn(run func()) *Writer_Cancel_Call {
	_c.Call.Return(run)
	return _c
}

// Write provides a mock function with given fields: _a0
func (_m *Writer) Write(_a0 interface{}) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Write")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Writer_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type Writer_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - _a0 interface{}
func (_e *Writer_Expecter) Write(_a0 interface{}) *Writer_Write_Call {
	return &Writer_Write_Call{Call: _e.mock.On("Write", _a0)}
}

func (_c *Writer_Write_Call) Run(run func(_a0 interface{})) *Writer_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interface{}))
	})
	return _c
}

func (_c *Writer_Write_Call) Return(_a0 error) *Writer_Write_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Writer_Write_Call) RunAndReturn(run func(interface{}) error) *Writer_Write_Call {
	_c.Call.Return(run)
	return _c
}

// NewWriter creates a new instance of Writer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *Writer {
	mock := &Writer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
