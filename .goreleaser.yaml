version: 2

before:
  hooks:
    - go mod tidy

builds:
  - id: "asbackup"
    main: cmd/asbackup/main.go
    binary: "asbackup"
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - s -w -X 'main.appVersion={{.Version}}' -X 'main.commitHash={{.Commit}}' -X 'main.buildTime={{.Date}}'
  - id: "asrestore"
    main: cmd/asrestore/main.go
    binary: "asrestore"
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - s -w -X 'main.appVersion={{.Version}}' -X 'main.commitHash={{.Commit}}' -X 'main.buildTime={{.Date}}'

archives:
  - id: "asbackup"
    formats:  [ 'tar.gz' ]
    name_template: >-
      {{ .Binary }}_{{ .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]
    files:
      - LICENSE
    ids:
      - "asbackup"
  - id: "asrestore"
    formats:  [ 'tar.gz' ]
    name_template: >-
      {{ .Binary }}_{{ .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]
    files:
      - LICENSE
    ids:
      - "asrestore"

release:
  prerelease: false
  make_latest: false
  replace_existing_artifacts: true
  mode: "replace"
#  header: |
#    ## Release {{ .Version }} ({{ .Date }})
#    - asbackup (CLI tool)
#    - asrestore (CLI tool)
#    - backup-go (library)

changelog:
  disable: true

checksum:
  name_template: "checksums.txt"